import json
import boto3
import requests
import uuid
import os

s3 = boto3.client('s3')
BUCKET_NAME = 'idolaudio'
PUBLIC_VOICE_API_URL = 'https://persona-sound.data.gamania.com/api/v1/public/voice'
VOICE_API_TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnRfaWQiOiJhd3NfaGFja2F0aG9uIiwiZXhwaXJlcyI6MTc0NTc0ODAwMH0.9qpg1xraE_d_Hua2brAmCfRlQSce6p2kdipgq8j1iqo'

def lambda_handler(event, context):
    try:
        body = json.loads(event['body'])
        text = body.get('text')
        speaker = "junting"
        model_id = "5"

        if not text or not speaker or model_id is None:
            return {
                'statusCode': 400,
                'body': json.dumps({'error': 'Missing required fields'})
            }

        # 組裝 API 請求
        headers = {
            'Authorization': f'Bearer {VOICE_API_TOKEN}',
            'Accept': 'application/json',
            'Content-Type': 'application/json'
        }

        params = {
            'text': text,
            'model_id': model_id,
            'speaker_name': speaker,
            'mode': 'file'
        }

        response = requests.get(PUBLIC_VOICE_API_URL, headers=headers, params=params)
        if response.status_code != 200:
            return {
                'statusCode': response.status_code,
                'body': json.dumps({'error': response.json().get('message', 'Unknown error')})
            }

        media_url = response.json().get('media_url')
        if not media_url:
            return {
                'statusCode': 500,
                'body': json.dumps({'error': 'No media_url found in response'})
            }

        # 下載音檔並上傳到 S3
        audio_data = requests.get(media_url).content
        filename = f'audio/{uuid.uuid4()}.wav'
        s3.put_object(Bucket=BUCKET_NAME, Key=filename, Body=audio_data, ContentType='audio/wav')

        s3_url = f'https://{BUCKET_NAME}.s3.amazonaws.com/{filename}'
        return {
            'statusCode': 200,
            'body': json.dumps({'audio_url': s3_url})
        }

    except Exception as e:
        return {
            'statusCode': 500,
            'body': json.dumps({'error': str(e)})
        }